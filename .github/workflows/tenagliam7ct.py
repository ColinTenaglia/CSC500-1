# -*- coding: utf-8 -*-
"""TenagliaM7CT

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PvJCwl1rACRUyQGs5qblIyss7nnyA23Z

### **Class CourseDetails:**

- **Function __init__():**
  - Initialize `room_numbers`, `instructors`, and `meeting_times` dictionaries with course details.

- **Function get_course_details(course_number):**
  - Retrieve details (room number, instructor, and meeting time) of the given course number.
  - Return the details as a formatted string if available, otherwise return a message indicating details not found.

### Function main():

- Create an instance of the `CourseDetails` class.
    
- **Loop:**
  - Prompt the user to input a course number.
  - If the user inputs 'quit', exit the loop.
  - Otherwise:
    - Get details of the entered course number using the `CourseDetails` instance.
    - Print the details.

**If this script is executed directly:**
- Call the `main` function.
"""

# This class contains details about different courses.
class CourseDetails:

    # This method initializes the CourseDetails object with room numbers, instructors, and meeting times for various courses.
    def __init__(self):

        # Dictionary containing course codes to room numbers.
        self.room_numbers = {
            "CSC101": "3004",
            "CSC102": "4501",
            "CSC103": "6755",
            "NET110": "1244",
            "COM241": "1411"
        }

        # Dictionary containing course codes to instructors' names.
        self.instructors = {
            "CSC101": "Haynes",
            "CSC102": "Alvarado",
            "CSC103": "Rich",
            "NET110": "Burke",
            "COM241": "Lee"
        }

        # Dictionary containing course codes to meeting times.
        self.meeting_times = {
            "CSC101": "8:00 a.m.",
            "CSC102": "9:00 a.m.",
            "CSC103": "10:00 a.m.",
            "NET110": "11:00 a.m.",
            "COM241": "1:00 p.m."
        }
    # This definition retrieves details of a course utilizing its course number.
    def get_course_details(self, course_number):

        # Get room number for the given course number.
        room_number = self.room_numbers.get(course_number)

        # Get instructor for the given course number.
        instructor = self.instructors.get(course_number)

        # Get meeting time for the given course number.
        meeting_time = self.meeting_times.get(course_number)

        # If all details are available, return a formatted string with the details.
        if room_number and instructor and meeting_time:
            return f"Room Number: {room_number}, Instructor: {instructor}, Meeting Time: {meeting_time}"
        else:
            # If any detail is missing, return a message indicating that course details are not found.
            return "Course details not found."

# This is the main function where the program execution begins.
def main():

    # Create an instance of the CourseDetails class.
    course_details = CourseDetails()

    while True:
        # Prompt the user to input a course number.
        course_number = input("Enter a course number (or 'quit' to exit): ")

        # If the user enters 'quit', exit the loop.
        if course_number.lower() == 'quit':
            break

        # Get details of the entered course number.
        details = course_details.get_course_details(course_number)

        # Print the details of the entered course number.
        print(details)

# Call the main function.
if __name__ == "__main__":

    main()